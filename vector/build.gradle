apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    defaultConfig {
        applicationId "im.vector"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 7
        versionName "0.1.1"
    }

    signingConfigs {
        release {
            storeFile file(project.hasProperty("RELEASE_STORE_FILE") ? RELEASE_STORE_FILE : "/dummy/path")
            storePassword project.hasProperty("RELEASE_STORE_PASSWORD") ? RELEASE_STORE_PASSWORD : "dummy password"
            keyAlias project.hasProperty("RELEASE_KEY_ALIAS") ? RELEASE_KEY_ALIAS : "dummy alias"
            keyPassword project.hasProperty("RELEASE_KEY_PASSWORD") ? RELEASE_KEY_PASSWORD : "dummy password"
        }
    }

    buildTypes {

        debug {
            resValue "string", "git_revision", "\"${gitRevision()}\""
            resValue "string", "git_revision_unix_date", "\"${gitRevisionUnixDate()}\""
            resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""
        }

        release {
            resValue "string", "git_revision", "\"${gitRevision()}\""
            resValue "string", "git_revision_unix_date", "\"${gitRevisionUnixDate()}\""
            resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""
            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        matrixorg.initWith(buildTypes.release)
        matrixorg {
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        alpha {
            applicationId "im.vector.alpha"
            versionCode 1
            versionName "0.1.0"
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    repositories {
        flatDir {
            dir 'libs'
        }
    }
}


def gitRevision() {
    def cmd = "git rev-parse --short HEAD"
    return cmd.execute().text.trim()
}

def gitRevisionUnixDate() {
    def cmd = "git show -s --format=%ct HEAD^{commit}"
    return cmd.execute().text.trim()
}

def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'me.leolin:ShortcutBadger:1.1.2@aar'

    compile "com.android.support:appcompat-v7:$sdkVersion"
    compile "com.android.support:design:$sdkVersion"
    compile "com.android.support:cardview-v7:$sdkVersion"
    compile "com.android.support:recyclerview-v7:$sdkVersion"
    compile "com.google.android.gms:play-services-gcm:$gmsVersion"
    compile "com.google.android.gms:play-services-analytics:$gmsVersion"

    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'io.pristine:libjingle:9690@aar'
    compile 'com.github.matrix-org:matrix-android-sdk:develop-SNAPSHOT'
}

